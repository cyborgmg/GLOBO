/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.Contato;
import io.swagger.model.ContatoUpdate;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-07-04T13:15:51.513Z[GMT]")
@Api(value = "contatos", description = "the {idContato} API")
public interface IdContatoApi {

    @ApiOperation(value = "Apaga um objeto do tipo Contato", nickname = "idContatoDelete", notes = "", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Nenhum conteúdo", response = String.class),
        @ApiResponse(code = 401, message = "Não autorizado", response = String.class),
        @ApiResponse(code = 404, message = "Não encontrado", response = String.class) })
    @RequestMapping(value = "/contatos/{idContato}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<String> idContatoDelete(@ApiParam(value = "Identificador único de objetos do tipo Contato",required=true) @PathVariable("idContato") Integer idContato);

    @ApiOperation(value = "Retorna um único objeto do tipo Contato", nickname = "idContatoGet", notes = "", response = Contato.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Contato.class),
        @ApiResponse(code = 401, message = "Não autorizado", response = String.class),
        @ApiResponse(code = 404, message = "Não encontrado", response = String.class) })
    @RequestMapping(value = "/contatos/{idContato}",
        produces = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<Contato> idContatoGet(@ApiParam(value = "Identificador único de objetos do tipo Contato",required=true) @PathVariable("idContato") Integer idContato
);


    @ApiOperation(value = "Altera um objeto do tipo Contato", nickname = "idContatoPut", notes = "", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Nenhum conteúdo", response = String.class),
        @ApiResponse(code = 400, message = "Requisição inválida", response = String.class),
        @ApiResponse(code = 401, message = "Não autorizado", response = String.class),
        @ApiResponse(code = 404, message = "Não encontrado", response = String.class) })
    @RequestMapping(value = "/contatos/{idContato}",
        produces = { "application/json" },
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<String> idContatoPut(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContatoUpdate body
,@ApiParam(value = "Identificador único de objetos do tipo Contato",required=true) @PathVariable("idContato") Integer idContato
);

}
