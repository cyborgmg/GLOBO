/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.util.List;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.Contato;
import io.swagger.model.ContatoCreate;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-07-04T13:15:51.513Z[GMT]")
@Api(value = "default", description = "the default API")
public interface DefaultApi {

    @ApiOperation(value = "Retorna uma lista de registros", nickname = "rootGet", notes = "Retorna uma lista de registros de acordo com o informado nos parâmetros page e size. Se estes parâmetros não forem passados na consulta, os seguintes valores padrão serão utilizados: page = 0 e size = 10", response = Contato.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Contato.class, responseContainer = "List"),
        @ApiResponse(code = 401, message = "Não autorizado", response = String.class),
        @ApiResponse(code = 404, message = "Não encontrado", response = String.class) })
    @RequestMapping(value = "/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Contato>> rootGet(@ApiParam(value = "Quantidade de registros a ser retornada em uma única página") @Valid @RequestParam(value = "size", required = false) Integer size
,@ApiParam(value = "Página onde se encontra o subconjunto de registros desejado") @Valid @RequestParam(value = "page", required = false) Integer page
);


    @ApiOperation(value = "Cria um novo objeto do tipo Contato", nickname = "rootPost", notes = "", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Criado", response = String.class),
        @ApiResponse(code = 400, message = "Não encontrado", response = String.class),
        @ApiResponse(code = 401, message = "Não autorizado", response = String.class) })
    @RequestMapping(value = "/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<String> rootPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ContatoCreate body
);

}
